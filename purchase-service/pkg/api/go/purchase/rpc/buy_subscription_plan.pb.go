// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        (unknown)
// source: purchase/rpc/buy_subscription_plan.proto

package rpc

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	model "github.com/ndtdat/social-network-monorepo/purchase-service/pkg/api/go/purchase/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuySubscriptionPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionPlanTier model.SubscriptionPlanTier `protobuf:"varint,1,opt,name=subscription_plan_tier,json=subscriptionPlanTier,proto3,enum=model.SubscriptionPlanTier" json:"subscription_plan_tier,omitempty"`
}

func (x *BuySubscriptionPlanRequest) Reset() {
	*x = BuySubscriptionPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_rpc_buy_subscription_plan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuySubscriptionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySubscriptionPlanRequest) ProtoMessage() {}

func (x *BuySubscriptionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_rpc_buy_subscription_plan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySubscriptionPlanRequest.ProtoReflect.Descriptor instead.
func (*BuySubscriptionPlanRequest) Descriptor() ([]byte, []int) {
	return file_purchase_rpc_buy_subscription_plan_proto_rawDescGZIP(), []int{0}
}

func (x *BuySubscriptionPlanRequest) GetSubscriptionPlanTier() model.SubscriptionPlanTier {
	if x != nil {
		return x.SubscriptionPlanTier
	}
	return model.SubscriptionPlanTier(0)
}

type BuySubscriptionPlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *model.DetailedSubscriptionPlan `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BuySubscriptionPlanReply) Reset() {
	*x = BuySubscriptionPlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_purchase_rpc_buy_subscription_plan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuySubscriptionPlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySubscriptionPlanReply) ProtoMessage() {}

func (x *BuySubscriptionPlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_purchase_rpc_buy_subscription_plan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySubscriptionPlanReply.ProtoReflect.Descriptor instead.
func (*BuySubscriptionPlanReply) Descriptor() ([]byte, []int) {
	return file_purchase_rpc_buy_subscription_plan_proto_rawDescGZIP(), []int{1}
}

func (x *BuySubscriptionPlanReply) GetData() *model.DetailedSubscriptionPlan {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_purchase_rpc_buy_subscription_plan_proto protoreflect.FileDescriptor

var file_purchase_rpc_buy_subscription_plan_proto_rawDesc = []byte{
	0x0a, 0x28, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x62,
	0x75, 0x79, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x1a, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x16, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x69, 0x65,
	0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x20, 0x00, 0x52, 0x14, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x54, 0x69, 0x65,
	0x72, 0x22, 0x4f, 0x0a, 0x18, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x5a, 0x48, 0x01, 0x5a, 0x56, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6e, 0x64, 0x74, 0x64, 0x61, 0x74, 0x2f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x65, 0x70,
	0x6f, 0x2f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x3b, 0x72, 0x70, 0x63, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_purchase_rpc_buy_subscription_plan_proto_rawDescOnce sync.Once
	file_purchase_rpc_buy_subscription_plan_proto_rawDescData = file_purchase_rpc_buy_subscription_plan_proto_rawDesc
)

func file_purchase_rpc_buy_subscription_plan_proto_rawDescGZIP() []byte {
	file_purchase_rpc_buy_subscription_plan_proto_rawDescOnce.Do(func() {
		file_purchase_rpc_buy_subscription_plan_proto_rawDescData = protoimpl.X.CompressGZIP(file_purchase_rpc_buy_subscription_plan_proto_rawDescData)
	})
	return file_purchase_rpc_buy_subscription_plan_proto_rawDescData
}

var file_purchase_rpc_buy_subscription_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_purchase_rpc_buy_subscription_plan_proto_goTypes = []interface{}{
	(*BuySubscriptionPlanRequest)(nil),     // 0: rpc.BuySubscriptionPlanRequest
	(*BuySubscriptionPlanReply)(nil),       // 1: rpc.BuySubscriptionPlanReply
	(model.SubscriptionPlanTier)(0),        // 2: model.SubscriptionPlanTier
	(*model.DetailedSubscriptionPlan)(nil), // 3: model.DetailedSubscriptionPlan
}
var file_purchase_rpc_buy_subscription_plan_proto_depIdxs = []int32{
	2, // 0: rpc.BuySubscriptionPlanRequest.subscription_plan_tier:type_name -> model.SubscriptionPlanTier
	3, // 1: rpc.BuySubscriptionPlanReply.data:type_name -> model.DetailedSubscriptionPlan
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_purchase_rpc_buy_subscription_plan_proto_init() }
func file_purchase_rpc_buy_subscription_plan_proto_init() {
	if File_purchase_rpc_buy_subscription_plan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_purchase_rpc_buy_subscription_plan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuySubscriptionPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_purchase_rpc_buy_subscription_plan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuySubscriptionPlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_purchase_rpc_buy_subscription_plan_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_purchase_rpc_buy_subscription_plan_proto_goTypes,
		DependencyIndexes: file_purchase_rpc_buy_subscription_plan_proto_depIdxs,
		MessageInfos:      file_purchase_rpc_buy_subscription_plan_proto_msgTypes,
	}.Build()
	File_purchase_rpc_buy_subscription_plan_proto = out.File
	file_purchase_rpc_buy_subscription_plan_proto_rawDesc = nil
	file_purchase_rpc_buy_subscription_plan_proto_goTypes = nil
	file_purchase_rpc_buy_subscription_plan_proto_depIdxs = nil
}
